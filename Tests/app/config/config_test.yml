#imports:
#    - { resource: security.yml }

framework:
    test: ~
    secret: test
    translator: ~
    default_locale:  "en"
    form: ~
    csrf_protection: ~
    validation:
        enable_annotations: true
    session:
        storage_id: session.storage.mock_file
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    templating:
        engines: ['twig']
    trusted_hosts:   ~
    trusted_proxies: ~
    fragments:       ~
    http_method_override: true

monolog:
    handlers:
        main:
            type:   stream
            path:   "%kernel.logs_dir%/%kernel.environment%.log"
            level:  debug

# Twig Configuration
twig:
    debug:            true
    strict_variables: true

spomky_jose:
#    keys:
#        main1:
#            public: true
#            type: x5c
#            value: azerty
#        main2:
#            public: false
#            type: jwk
#            value: azerty
#    keysets:
#        main1:
#            public: true
#            type: x5u
#            value: azerty
#        main2:
#            public: false
#            type: jwkset
#            value: azerty
    server_name: "www.example.com" # This is the audience for received tokens or issuer when issued
    serialization_mode: compact # Json Serialization Overview for issued jose using only one signature or recipient. Supported modes are 'full', 'flattened' and 'compact'.
    jwt_class: SpomkyLabs\TestJoseBundle\Entity\JWT
    jws_class: SpomkyLabs\TestJoseBundle\Entity\JWS
    jwe_class: SpomkyLabs\TestJoseBundle\Entity\JWE
    jwk_class: SpomkyLabs\TestJoseBundle\Entity\JWK
    jwkset_class: SpomkyLabs\TestJoseBundle\Entity\JWKSet
#    jwa_manager:
#    jwt_manager:
#    jwk_manager:
#    jwkset_manager:
#    storage:
#        enabled: false # If enabled, tokens will have an ID and are stored in a database
#    jot:
#        headers:
#            jku: false # If true, will include the url to the public key in the header of each token. It means that the controller/routes are enabled and all public keys can be retreived through HTTP requests.
#            jwk: false # If true, will include the public key in the header of each token
#            kid: false # Only if storage is enabled
#            x5u: false # Only if storage the key is a RSA key
#            x5c: false # Only if storage the key is a RSA key
#            x5t: false # Only if storage the key is a RSA key
#            x5t#256: false # Only if storage the key is a RSA key
#            crit: false # Supported values are false or a non-empty array of headers.
#        claims:
#            iss: www.example.com # This claim is mandatory and must not be empty
#            nbf: true # Not before
#            iat: true # Issued at
#            lifetime: 5min #
# Add events for custom claims
    compression_methods: [DEF,GZ,ZLIB]
    algorithms: # Use the following keywords
#        - required # Required algorithms
#        - recommended+ # Recommended+ algorithms
#        - recommended # Recommended algorithms
#        - recommended- # Recommended- algorithms
#        - optional # Optional algorithms
        - all # All algorithms (this combine all keywords above)
        - !none # Disable the none algorithm
    #or specify each algorithm you want to enable
#        - HS256
#        - HS384
#        - HS512
#        - ES256
#        - ES384
#        - ES512
#        - RS256
#        - RS384
#        - RS512
#        - PS256
#        - PS384
#        - PS512
#        - dir
#        - RSA1_5
#        - RSA-OAEP
#        - RSA-OAEP-256
#        - ECDH-ES
#        - ECDH-ES+A128KW
#        - ECDH-ES+A192KW
#        - ECDH-ES+A256KW
#        - A128KW
#        - A192KW
#        - A256KW
#        - PBES2-HS256+A128KW
#        - PBES2-HS384+A192KW
#        - PBES2-HS512+A256KW
#        - A128CBC-HS256
#        - A192CBC-HS384
#        - A256CBC-HS512
#        - A128GCMKW
#        - A192GCMKW
#        - A256GCMKW
#        - A128GCM
#        - A192GCM
#        - A256GCM
#        - none # Please disable this algorithm in production mode. Note that 'none' is always disabled by '!none'
